version: '3'

services:
  redis:
   image: redis:latest
   restart: on-failure
   expose:
     - "6379"
   depends_on:
     db:
       condition: service_healthy

  db:
   image: postgres:16-alpine
   restart: on-failure
   env_file:
     - .env
   expose:
     - "5432"
   volumes:
     - pg_data:/var/lib/postgresql/data
   healthcheck:
     test: ["CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER"]
     interval: 10s
     timeout: 5s
     retries: 5

  django:
    build: .
    tty: true
    env_file:
      - .env
    container_name: django
    command: sh -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
  app:
    build: .
    tty: true
    ports:
      - "8080:8080"
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8080"
    volumes:
      - .:/app
    depends_on:
       db:
         condition: service_healthy

  celery:
    build: .
    tty: true
    command: celery -A config worker -l info
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
    env_file:
      - .env

  celery-beat:
    build: .
    tty: true
    command: celery -A config beat -l info
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
      - celery
    env_file:
      - .env

volumes:
  pg_data:
